springdoc.api-docs.path=/api-docs
server.port=8080

spring.jpa.show-sql = true
spring.flyway.baseline-on-migrate = true

### Spring Cloud

#spring.cloud.gcp.sql.instance-connection-name=acn-highmark-health-odh:us-east4:sql-d-use4c-pstgrs-04
spring.cloud.gcp.sql.instance-connection-name=acn-highmark-health-odh:us-east4:greetingsql
spring.cloud.gcp.sql.database-name=greeting-db
spring.cloud.gcp.sql.enabled=true
spring.cloud.gcp.sql.enableIamAuth=true
spring.cloud.gcp.sql.sslmode=disable
spring.cloud.gcp.sql.ip-types=PRIVATE

spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.hibernate.ddl-auto=create-drop

#So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true

# Leave empty for root, uncomment and fill out if you specified a user
spring.datasource.username=sa-lcef-idp@acn-highmark-health-odh.iam
#spring.datasource.username=sa-lcef-idp@acn-highmark-health-odh.iam.gserviceaccount.com
spring.datasource.hikari.data-source-properties.socketFactory=com.google.cloud.sql.postgres.SocketFactory
spring.datasource.hikari.data-source-properties.enableIamAuth=true
spring.datasource.hikari.data-source-properties.sslmode=disable

## Uncomment if root password is specified
#spring.datasource.password=some

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.main.allow-bean-definition-overriding=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.hikari.maximum-pool-size=200
spring.datasource.hikari.minimum-idle=30
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.max-lifetime=10000
spring.datasource.hikari.idle-timeout=10000

spring.flyway.enabled=false